$date
	Mon Jul  1 02:07:51 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module dut $end
$var wire 8 # Bus [7:0] $end
$var wire 1 " clk $end
$var wire 1 ! rst $end
$var wire 4 $ MarToRam [3:0] $end
$var wire 4 % IRToCU [3:0] $end
$var wire 2 & FlagToCU [1:0] $end
$var wire 8 ' FinalOutput [7:0] $end
$var wire 18 ( CS [17:0] $end
$var wire 8 ) BToALU [7:0] $end
$var wire 8 * AToALU [7:0] $end
$var wire 2 + ALUToFlag [1:0] $end
$scope module ALU $end
$var wire 1 , ALUOut $end
$var wire 8 - BusOut [7:0] $end
$var wire 2 . Operation [1:0] $end
$var wire 2 / Flags [1:0] $end
$var wire 8 0 BRegister [7:0] $end
$var wire 8 1 Accumulator [7:0] $end
$var reg 9 2 result [8:0] $end
$upscope $end
$scope module Accumulator $end
$var wire 8 3 ALUIn [7:0] $end
$var wire 1 4 ALowerIn $end
$var wire 1 5 Ain $end
$var wire 1 6 Aout $end
$var wire 8 7 BusIn [7:0] $end
$var wire 8 8 BusOut [7:0] $end
$var wire 1 " clk $end
$var wire 1 ! rst $end
$var reg 8 9 temp [7:0] $end
$upscope $end
$scope module BRegister $end
$var wire 8 : ALUIn [7:0] $end
$var wire 1 ; Bin $end
$var wire 8 < BusIn [7:0] $end
$var wire 1 " clk $end
$var wire 1 ! rst $end
$var reg 8 = temp [7:0] $end
$upscope $end
$scope module FlagRegister $end
$var wire 1 > FlagEnable $end
$var wire 1 ? FlagOutEnable $end
$var wire 2 @ FlagsIn [1:0] $end
$var wire 1 " clk $end
$var wire 2 A FlagOut [1:0] $end
$var reg 2 B temp [1:0] $end
$upscope $end
$scope module IR $end
$var wire 8 C BusIn [7:0] $end
$var wire 1 D IRIn $end
$var wire 1 E IROut $end
$var wire 1 " clk $end
$var wire 1 ! rst $end
$var wire 4 F CUIn [3:0] $end
$var wire 4 G BusOut [3:0] $end
$var reg 8 H temp [7:0] $end
$upscope $end
$scope module MAR $end
$var wire 4 I BusIn [3:0] $end
$var wire 1 J MARIn $end
$var wire 4 K RAMIn [3:0] $end
$var wire 1 " clk $end
$var wire 1 ! rst $end
$var reg 4 L temp [3:0] $end
$upscope $end
$scope module OutputReg $end
$var wire 8 M BusIn [7:0] $end
$var wire 8 N Out [7:0] $end
$var wire 1 O OutLoad $end
$var wire 1 " clk $end
$var wire 1 ! rst $end
$var reg 8 P temp [7:0] $end
$upscope $end
$scope module PC $end
$var wire 4 Q BusIn [3:0] $end
$var wire 1 R PCIn $end
$var wire 1 S PCInc $end
$var wire 1 T PCOut $end
$var wire 1 " clk $end
$var wire 1 ! rst $end
$var wire 4 U BusOut [3:0] $end
$var reg 4 V temp [3:0] $end
$upscope $end
$scope module RAM $end
$var wire 4 W Addrs [3:0] $end
$var wire 8 X BusIn [7:0] $end
$var wire 8 Y BusOut [7:0] $end
$var wire 1 Z RAMIn $end
$var wire 1 [ RAMOut $end
$var wire 1 " clk $end
$var reg 8 \ temp_out [7:0] $end
$upscope $end
$scope module controlunit $end
$var wire 1 " clk $end
$var wire 2 ] flagReg [1:0] $end
$var wire 4 ^ opcode [3:0] $end
$var wire 1 ! rst $end
$var wire 18 _ ControlSignal [17:0] $end
$var parameter 32 ` add1 $end
$var parameter 32 a add2 $end
$var parameter 32 b add3 $end
$var parameter 32 c dec1 $end
$var parameter 32 d dec2 $end
$var parameter 32 e fetch1 $end
$var parameter 32 f fetch2 $end
$var parameter 32 g hlt1 $end
$var parameter 32 h idle $end
$var parameter 32 i inc1 $end
$var parameter 32 j inc2 $end
$var parameter 32 k jmp1 $end
$var parameter 32 l jmpc1 $end
$var parameter 32 m jmpc2 $end
$var parameter 32 n jmpz1 $end
$var parameter 32 o jmpz2 $end
$var parameter 32 p lda1 $end
$var parameter 32 q lda2 $end
$var parameter 32 r ldi1 $end
$var parameter 32 s out $end
$var parameter 32 t sta1 $end
$var parameter 32 u sta2 $end
$var parameter 32 v sub1 $end
$var parameter 32 w sub2 $end
$var parameter 32 x sub3 $end
$var reg 5 y nstate [4:0] $end
$var reg 5 z state [4:0] $end
$var reg 18 { temp [17:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 x
b1001 w
b1000 v
b10010 u
b10001 t
b1011 s
b11000 r
b100 q
b11 p
b10101 o
b10100 n
b10111 m
b10110 l
b10011 k
b1110 j
b1101 i
b0 h
b1100 g
b10 f
b1 e
b10000 d
b1111 c
b111 b
b110 a
b101 `
$end
#0
$dumpvars
bx {
bx z
bx y
bx _
bx ^
bx ]
bx \
x[
xZ
bx Y
bx X
bx W
bx V
bx U
xT
xS
xR
bx Q
bx P
xO
bx N
bx M
bx L
bx K
xJ
bx I
bx H
bx G
bx F
xE
xD
bx C
bx B
bx A
bx @
x?
x>
bx =
bx <
x;
bx :
bx 9
bx 8
bx 7
x6
x5
x4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
x,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
1"
0!
$end
#5000
b1110 \
b0 y
b0 %
b0 F
b0 ^
b0 '
b0 N
b0 P
b0 V
b0 H
b0 $
b0 K
b0 W
b0 L
b0 )
b0 0
b0 :
b0 =
b0 *
b0 1
b0 3
b0 9
1!
#10000
b10 +
b10 /
b10 @
b0 2
bz I
bz Q
bz U
bz G
bz #
bz -
bz 7
bz 8
bz <
bz C
bz M
bz X
bz Y
bz &
bz A
bz ]
0O
0R
0T
0S
0E
0D
0J
0;
06
04
05
0,
b0 .
0?
0>
0Z
0[
b0 (
b0 _
b0 {
b1 y
b0 z
0"
0!
#15000
1!
#20000
0!
#25000
1!
#30000
0!
#35000
1!
#40000
0!
#45000
1!
#50000
0!
#55000
1!
#60000
0!
#65000
1!
#70000
0!
#75000
1!
#80000
0!
#85000
1!
#90000
0!
#95000
1!
#100000
0!
#105000
1!
#110000
0!
#115000
1!
#120000
0!
#125000
1!
#130000
0!
#135000
1!
#140000
0!
#145000
1!
#150000
0!
#155000
1!
#160000
0!
#165000
1!
#170000
0!
#175000
1!
#180000
0!
#185000
1!
#190000
0!
#195000
1!
#200000
0!
#205000
1!
#210000
0!
#215000
1!
#220000
0!
#225000
1!
#230000
0!
#235000
1!
#240000
0!
#245000
1!
#250000
0!
#255000
1!
#260000
0!
#265000
1!
#270000
0!
#275000
1!
#280000
0!
#285000
1!
#290000
0!
#295000
1!
#300000
0!
#305000
1!
#310000
0!
#315000
1!
#320000
0!
#325000
1!
#330000
0!
#335000
1!
#340000
0!
#345000
1!
#350000
0!
#355000
1!
#360000
0!
#365000
1!
#370000
0!
#375000
1!
#380000
0!
#385000
1!
#390000
0!
#395000
1!
#400000
0!
